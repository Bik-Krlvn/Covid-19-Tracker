{"version":3,"sources":["serviceWorker.js","components/Footer/BaseFooter.jsx","components/Stats/StatsCard.jsx","components/Stats/Stats.jsx","app/api/index.js","hooks/useTotalCount.js","components/Stats/reducer/stats.action.js","components/Stats/reducer/stats.constants.js","view/StatsView.jsx","components/ListCountry/ListContent.jsx","hooks/usePagination.js","components/ListCountry/reducer/countries.action.js","components/ListCountry/reducer/countries.constants.js","hooks/useSearchCountry.js","components/ListCountry/ListCountry.jsx","hooks/useCountries.js","view/ListCountryView.jsx","components/Graphs/Graph.jsx","components/Graphs/GraphLayout.jsx","hooks/useGlobalTotal.js","components/Graphs/reducer/graph.action.js","components/Graphs/reducer/graph.constants.js","hooks/useCurrentCountry.js","view/GraphView.jsx","components/preventive/PreventiveView.jsx","components/Main.jsx","app/reducer/reducerUtil.js","components/Stats/reducer/stats.reducer.js","components/ListCountry/reducer/countries.reducer.js","components/Graphs/reducer/graph.reducer.js","app/reducer/rootReducer.js","app/layout/App.jsx","app/store/configStore.js","config.js","index.js"],"names":["Boolean","window","location","hostname","match","BaseFooter","className","href","StatsCard","count","icon","gradient","title","date","start","end","duration","separator","Date","toDateString","defaultProps","Stats","confirmed","recovered","deaths","lastUpdate","value","getTotalCountryCountAsync","country","Promise","resolve","reject","a","url","axios","get","result","data","useTotalCount","dispatch","useDispatch","useSelector","state","selectedCountry","stats","useEffect","payload","type","toastr","error","console","loadData","StatsView","ListContent","OnCountryClick","onClick","name","iso2","usePagination","itemPerPage","useState","currentPage","setCurrentPage","maxPage","Math","ceil","length","next","min","prev","jump","page","pageNumber","max","currentData","begin","slice","selectCountryAction","useSearchCountry","onSearchCountry","ListCountry","countries","handleClickAction","searchValue","setSearchValue","newCountry","onKeyDown","evt","keyCode","id","placeholder","labelKey","option","options","onChange","selected","map","index","key","tabIndex","i","useCountries","onCountryClick","ListCountryView","Graph","items","subItem","currentCountry","LineChartView","labels","datasets","label","borderColor","fill","backgroundColor","BarChartView","display","text","fontColor","legend","GraphLayout","Country","isGlobalActive","isCountryActive","data-toggle","useGlobalTotal","globalData","graph","global","item","total","reportDate","useCurrentCountry","GraphView","PreventiveView","data-timeline-content","data-timeline-axis-style","Main","createReducer","initialState","fnMap","handler","iso3","concat","combineReducers","toastrReducer","statsReducer","countriesReducer","graphReducer","App","store","preloadedState","middlewares","thunk","storeEnhancer","applyMiddleware","composedEnhancer","composeWithDevTools","createStore","rootReducer","configureStore","timeOut","newestOnTop","preventDuplicates","position","transitionIn","transitionOut","defaults","baseURL","process","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.98062621.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst BaseFooter = () => {\r\n  return (\r\n    <footer className=\"footer pt-0\">\r\n      <div className=\"row align-items-center justify-content-lg-between\">\r\n        <div className=\"col-lg-6\">\r\n          <div className=\"copyright text-center  text-lg-left  text-muted\">\r\n            © 2020{\" \"}\r\n            <a\r\n              href=\"https://www.creative-tim.com\"\r\n              className=\"font-weight-bold ml-1\"\r\n            >\r\n              Covid-19-Tracker\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-6\">\r\n          <ul className=\"nav nav-footer justify-content-center justify-content-lg-end\">\r\n            <li className=\"nav-item\">\r\n              <a href=\"#!\" className=\"nav-link\">\r\n                Powered by Infordas Ghana Limited\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a\r\n                href=\"https://www.cdc.gov/coronavirus/2019-ncov/prevent-getting-sick/prevention.html\"\r\n                className=\"nav-link\"\r\n              >\r\n                Sources\r\n              </a>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <a\r\n                href=\"https://github.com/Bik-Krlvn/Covid-19-Tracker/blob/develop/LICENSE\"\r\n                className=\"nav-link\"\r\n              >\r\n                MIT License\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default BaseFooter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CountUp from \"react-countup\";\r\n\r\nconst StatsCard = ({ count, icon, gradient, title, date }) => {\r\n  return (\r\n    <div className=\"col-xl-4 col-md-6\">\r\n      <div className=\"card card-stats\">\r\n        {/* Card body */}\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h5 className=\"card-title text-uppercase text-muted mb-0\">\r\n                {title}\r\n              </h5>\r\n              <span className=\"h2 font-weight-bold mb-0\">\r\n                <CountUp start={0} end={count} duration={2.5} separator=\",\" />\r\n              </span>\r\n            </div>\r\n            <div className=\"col-auto\">\r\n              <div className={gradient}>\r\n                <i className={icon} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p className=\"mt-3 mb-0 text-sm\">\r\n            <span className=\"text-success mr-2\">\r\n              <i className=\"fa fa-arrow-up\" /> \r\n            </span>\r\n            <span className=\"text-nowrap\">Since {new Date(date).toDateString()}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatsCard.propTypes = {\r\n  title: PropTypes.string,\r\n  count: PropTypes.number,\r\n  icon: PropTypes.string,\r\n  gradient: PropTypes.string,\r\n  date: PropTypes.string,\r\n};\r\n\r\nStatsCard.defaultProps = {\r\n  count: 0,\r\n  icon: \"ni ni-chart-pie-35\",\r\n  gradient:\r\n    \"icon icon-shape bg-gradient-orange text-white rounded-circle shadow\",\r\n};\r\nexport default StatsCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StatsCard from \"./StatsCard\";\r\n\r\nconst Stats = ({ confirmed, recovered, deaths, lastUpdate }) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <StatsCard\r\n        title=\"Confirmed Cases\"\r\n        icon=\"ni ni-atom\"\r\n        count={(confirmed && confirmed.value) || 0}\r\n        gradient=\"icon icon-shape bg-gradient-red text-white rounded-circle shadow\"\r\n        date={lastUpdate}\r\n      />\r\n\r\n      <StatsCard\r\n        title=\"Recovered\"\r\n        icon=\"ni ni-chart-pie-35\"\r\n        count={(recovered && recovered.value) || 0}\r\n        gradient=\"icon icon-shape bg-gradient-orange text-white rounded-circle shadow\"\r\n        date={lastUpdate}\r\n      />\r\n\r\n      <StatsCard\r\n        title=\"Deaths\"\r\n        icon=\"ni ni-ambulance\"\r\n        count={(deaths && deaths.value) || 0}\r\n        gradient=\"icon icon-shape bg-gradient-blue text-white rounded-circle shadow\"\r\n        date={lastUpdate}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nStats.propTypes = {\r\n  confirmed: PropTypes.object,\r\n  recovered: PropTypes.object,\r\n  deaths: PropTypes.object,\r\n};\r\nexport default Stats;\r\n","import axios from \"axios\";\r\n\r\n\r\nexport const getDailyTotalCountAsync = () => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const result = await axios.get(\"/daily\");\r\n      const data = result.data.map((item) => ({\r\n        confirmed: item.confirmed.total,\r\n        deaths: item.deaths.total,\r\n        date: item.reportDate,\r\n      }));\r\n\r\n      resolve(data);\r\n    } catch (err) {\r\n      reject(err);\r\n    }\r\n  });\r\n};\r\n\r\nexport const getTotalCountryCountAsync = (country = null) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const url = country === null ? \"/\" : `countries/${country}`;\r\n      const result = await axios.get(url);\r\n      resolve(result.data);\r\n    } catch (err) {\r\n      reject(err);\r\n    }\r\n  });\r\n};\r\n\r\nexport const getCountriesAsync = () => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const result = await axios.get(\"/countries\");\r\n      resolve(result.data.countries);\r\n    } catch (err) {\r\n      reject(err);\r\n    }\r\n  });\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getTotalCountryCountAction } from \"../components/Stats/reducer/stats.action\";\r\n\r\nconst useTotalCount = () => {\r\n  const dispatch = useDispatch();\r\n  const country = useSelector((state) => state.country.selectedCountry);\r\n  const confirmed = useSelector((state) => state.stats.confirmed);\r\n  const recovered = useSelector((state) => state.stats.recovered);\r\n  const deaths = useSelector((state) => state.stats.deaths);\r\n  const lastUpdate = useSelector((state) => state.stats.lastUpdate);\r\n\r\n  useEffect(() => {\r\n    const loadData = () => dispatch(getTotalCountryCountAction(country));\r\n    loadData();\r\n  }, [dispatch, country]);\r\n\r\n  return { confirmed, recovered, deaths, lastUpdate };\r\n};\r\n\r\nexport default useTotalCount;\r\n","import { toastr } from \"react-redux-toastr\";\r\n\r\nimport { getTotalCountryCountAsync } from \"../../../app/api\";\r\n\r\nimport { GET_TOTAL_COUNTRY_COUNT } from \"./stats.constants\";\r\n\r\nexport const getTotalCountryCountAction = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const data = await getTotalCountryCountAsync(payload);\r\n      dispatch({\r\n        type: GET_TOTAL_COUNTRY_COUNT,\r\n        payload: data,\r\n      });\r\n    } catch (err) {\r\n      toastr.error(\"oops\", \"Sorry something went wrong\");\r\n      console.error(err);\r\n    }\r\n  };\r\n};\r\n","export const GET_TOTAL_COUNTRY_COUNT = \"GET_TOTAL_COUNTRY_COUNT\";\r\n","import React from \"react\";\r\nimport Stats from \"../components/Stats/Stats\";\r\nimport useTotalCount from \"../hooks/useTotalCount\";\r\n\r\nconst StatsView = () => {\r\n  const { confirmed, recovered, deaths, lastUpdate } = useTotalCount();\r\n\r\n  return (\r\n    <Stats\r\n      confirmed={confirmed}\r\n      recovered={recovered}\r\n      deaths={deaths}\r\n      lastUpdate={lastUpdate}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StatsView;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst ListContent = ({ country, OnCountryClick }) => {\r\n  const handleCountryClick = (payload) => {\r\n    OnCountryClick(payload.name);\r\n  };\r\n\r\n  return (\r\n    <div className=\"list-group list-group-flush\">\r\n      <a\r\n        href=\"#!\"\r\n        onClick={() => handleCountryClick(country)}\r\n        className=\"list-group-item list-group-item-action flex-column align-items-start py-4 px-4\"\r\n      >\r\n        <div className=\"row align-items-center\">\r\n          <div className=\"col \">\r\n            <h4 className=\"mb-0\">{country.name}</h4>\r\n            <span className=\"text-success\">●</span>\r\n            <small>{country.iso2}</small>\r\n          </div>\r\n          <div className=\"col-auto\">\r\n            <button type=\"button\" className=\"btn btn-sm btn-primary\">\r\n              Plot\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nListContent.propTypes = {\r\n  country: PropTypes.object.isRequired,\r\n  OnCountryClick: PropTypes.func,\r\n};\r\nexport default ListContent;\r\n","import { useState } from \"react\";\r\n\r\nconst usePagination = (data, itemPerPage) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const maxPage = Math.ceil(data.length / itemPerPage);\r\n\r\n  const currentData = () => {\r\n    const begin = (currentPage - 1) * itemPerPage;\r\n    const end = begin + itemPerPage;\r\n    return data.slice(begin, end);\r\n  };\r\n\r\n  const next = () => {\r\n    setCurrentPage((currentPage) => Math.min(currentPage + 1, maxPage));\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrentPage((currentPage) => Math.ceil(currentPage - 1, 1));\r\n  };\r\n\r\n  const jump = (page) => {\r\n    const pageNumber = Math.max(1, page);\r\n    setCurrentPage((currentPage) => Math.min(pageNumber, maxPage));\r\n  };\r\n\r\n  return { next, prev, jump, currentData, currentPage, maxPage };\r\n};\r\n\r\nexport default usePagination;\r\n","import { toastr } from \"react-redux-toastr\";\r\n\r\nimport { getCountriesAsync } from \"../../../app/api\";\r\nimport { GET_COUNTRIES, SELECTED_COUNTRY } from \"./countries.constants\";\r\n\r\nexport const getCountriesAction = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const data = await getCountriesAsync();\r\n      dispatch({\r\n        type: GET_COUNTRIES,\r\n        payload: data,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      toastr.error(\"Oops\", \"something went wrong\");\r\n    }\r\n  };\r\n};\r\n\r\nexport const selectCountryAction = (payload) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: SELECTED_COUNTRY,\r\n      payload,\r\n    });\r\n  };\r\n};\r\n","export const GET_COUNTRIES = \"GET_COUNTRIES\";\r\nexport const SELECTED_COUNTRY = \"SELECTED_COUNTRY\";\r\n","import { useDispatch } from \"react-redux\";\r\nimport { selectCountryAction } from \"../components/ListCountry/reducer/countries.action\";\r\n\r\nconst useSearchCountry = () => {\r\n  const dispatch = useDispatch();\r\n  const onSearchCountry = (payload) => dispatch(selectCountryAction(payload));\r\n  return { onSearchCountry };\r\n};\r\n\r\nexport default useSearchCountry;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport ListContent from \"./ListContent\";\r\nimport usePagination from \"../../hooks/usePagination\";\r\nimport useSearchCountry from \"../../hooks/useSearchCountry\";\r\n\r\nconst ListCountry = ({ countries, handleClickAction }) => {\r\n  const { currentData, next, currentPage, prev, jump } = usePagination(\r\n    countries,\r\n    5\r\n  );\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const { onSearchCountry } = useSearchCountry();\r\n  const newCountry = currentData();\r\n  const pageInterval = [1, 2, 3, 4, 5, 6];\r\n  const enterKeyCode = 13;\r\n\r\n  const handleFormSubmit = (evt) => {\r\n    if (evt.keyCode === enterKeyCode) {\r\n      if (searchValue.length) {\r\n        const value = searchValue[0].name === \"Global\" ? null : searchValue[0].name;\r\n        onSearchCountry(value);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header bg-transparent\">\r\n        <div className=\"row align-items-center\">\r\n          <div className=\"col\">\r\n            <h6 className=\"text-uppercase text-muted ls-1 mb-1\">Countries</h6>\r\n            <h5 className=\"h3 mb-0\">Available</h5>\r\n            <form>\r\n              <div className=\"form-group mb-0\">\r\n                <div className=\"input-group input-group-lg input-group-flush\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <div className=\"input-group-text\">\r\n                      <span className=\"fas fa-search\" />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-control\">\r\n                    <Typeahead\r\n                      onKeyDown={handleFormSubmit}\r\n                      id=\"country_opt\"\r\n                      placeholder=\"search country\"\r\n                      labelKey={(option) => `${option.name}`}\r\n                      options={countries}\r\n                      onChange={(selected) => {\r\n                        setSearchValue((searchValue) => selected);\r\n                      }}\r\n                      selected={searchValue}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {/* List */}\r\n        {newCountry &&\r\n          newCountry.map((country, index) => (\r\n            <ListContent\r\n              key={`${country.iso2}_${index}`}\r\n              country={country}\r\n              OnCountryClick={handleClickAction}\r\n            />\r\n          ))}\r\n      </div>\r\n\r\n      <div className=\"card-footer\">\r\n        <nav>\r\n          <ul className=\"pagination justify-content-end mb-0\">\r\n            <li\r\n              className={`page-item ${currentPage > 1 ? \"enable\" : \"disabled\"}`}\r\n            >\r\n              <a\r\n                className=\"page-link\"\r\n                href=\"#!\"\r\n                tabIndex={-1}\r\n                onClick={() => prev()}\r\n              >\r\n                <i className=\"fas fa-angle-left\" />\r\n                <span className=\"sr-only\">Previous</span>\r\n              </a>\r\n            </li>\r\n\r\n            {pageInterval.map((page, i) => (\r\n              <li\r\n                className={`page-item ${currentPage === page ? \"active\" : \"\"}`}\r\n                key={i}\r\n              >\r\n                <a className=\"page-link\" href=\"#!\" onClick={() => jump(page)}>\r\n                  {page}\r\n                </a>\r\n              </li>\r\n            ))}\r\n\r\n            <li className=\"page-item\">\r\n              <a className=\"page-link\" href=\"#!\" onClick={() => next()}>\r\n                <i className=\"fas fa-angle-right\" />\r\n                <span className=\"sr-only\">Next</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nListCountry.propTypes = {\r\n  countries: PropTypes.array.isRequired,\r\n  handleClickAction: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ListCountry;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getCountriesAction,\r\n  selectCountryAction,\r\n} from \"../components/ListCountry/reducer/countries.action\";\r\n\r\nconst useCountries = () => {\r\n  const dispatch = useDispatch();\r\n  const countries = useSelector((state) => state.country.countries);\r\n\r\n  const onCountryClick = (payload) => {\r\n    if (payload && payload === \"Global\") payload = null;\r\n    dispatch(selectCountryAction(payload));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadData = () => dispatch(getCountriesAction());\r\n    loadData();\r\n  }, [dispatch]);\r\n\r\n  return { countries, onCountryClick };\r\n};\r\n\r\nexport default useCountries;\r\n","import React from \"react\";\r\nimport ListCountry from \"../components/ListCountry/ListCountry\";\r\nimport useCountries from \"../hooks/useCountries\";\r\n\r\nconst ListCountryView = () => {\r\n  const { countries, onCountryClick } = useCountries();\r\n\r\n  return (\r\n    <div>\r\n      <ListCountry countries={countries} handleClickAction={onCountryClick}  />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListCountryView;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nconst Graph = ({\r\n  items,\r\n  subItem: { confirmed, recovered, deaths, currentCountry },\r\n}) => {\r\n  const LineChartView =\r\n    items.length === 0 ? null : (\r\n      <Line\r\n        data={{\r\n          labels: items.map(({ date }) => date),\r\n          datasets: [\r\n            {\r\n              data: items.map(({ confirmed }) => confirmed),\r\n              label: \"Confirmed\",\r\n              borderColor: \"#36A2EB\",\r\n              fill: true,\r\n            },\r\n            {\r\n              data: items.map(({ deaths }) => deaths),\r\n              label: \"Deaths\",\r\n              borderColor: \"#FF6384\",\r\n              fill: true,\r\n              backgroundColor: \"rgba(205,0,0,0.5)\",\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n    );\r\n\r\n  const BarChartView = recovered ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Confirmed Cases\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n            backgroundColor: [\r\n              \"rgba(5, 155, 255,0.5)\",\r\n              \"rgba(34, 206, 206,0.5)\",\r\n              \"rgba(255, 61, 103,0.5)\",\r\n            ],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        title: {\r\n          display: true,\r\n          text: `Country: ${currentCountry}`,\r\n          fontColor: \"white\",\r\n        },\r\n        legend: { display: false },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return <div>{currentCountry ? BarChartView : LineChartView}</div>;\r\n};\r\n\r\nGraph.propTypes = {\r\n  items: PropTypes.array,\r\n  subItem: PropTypes.object,\r\n  currentCountry: PropTypes.string,\r\n};\r\nexport default Graph;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Graph from \"./Graph\";\r\n\r\nconst GraphLayout = ({ items, selectedCountry }) => {\r\n  const Country = selectedCountry.currentCountry;\r\n  const isGlobalActive = Country ? \"\" : \"active\";\r\n  const isCountryActive = isGlobalActive === \"active\" ? \"\" : \"active\";\r\n  return (\r\n    <div className=\"card bg-default\">\r\n      <div className=\"card-header bg-transparent\">\r\n        <div className=\"row align-items-center\">\r\n          <div className=\"col\">\r\n            <h6 className=\"text-light text-uppercase ls-1 mb-1\">Overview</h6>\r\n            <h5 className=\"h3 text-white mb-0\">Graph</h5>\r\n          </div>\r\n          <div className=\"col\">\r\n            <ul className=\"nav nav-pills justify-content-end\">\r\n              <li className=\"nav-item mr-2 mr-md-0\">\r\n                <a\r\n                  href=\"##\"\r\n                  className={`nav-link py-2 px-3 ${isGlobalActive}`}\r\n                  data-toggle=\"tab\"\r\n                >\r\n                  <span className=\"d-none d-md-block\">Global</span>\r\n                  <span className=\"d-md-none\">G</span>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  href=\"##\"\r\n                  className={`nav-link py-2 px-3 ${isCountryActive}`}\r\n                  data-toggle=\"tab\"\r\n                >\r\n                  <span className=\"d-none d-md-block\">\r\n                    {Country === null ? \"Country\" : Country}\r\n                  </span>\r\n                  <span className=\"d-md-none\">C</span>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {/* Chart */}\r\n        <Graph items={items} subItem={selectedCountry} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nGraphLayout.propTypes = {\r\n  items: PropTypes.array,\r\n  selectedCountry: PropTypes.object,\r\n};\r\nexport default GraphLayout;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getGlobalTotalAction } from \"../components/Graphs/reducer/graph.action\";\r\n\r\nconst useGlobalTotal = () => {\r\n  const dispatch = useDispatch();\r\n  const globalData = useSelector((state) => state.graph.global);\r\n\r\n  useEffect(() => {\r\n    const loadData = () => dispatch(getGlobalTotalAction());\r\n    loadData();\r\n  }, [dispatch]);\r\n\r\n  return { globalData };\r\n};\r\n\r\nexport default useGlobalTotal;\r\n","import { toastr } from \"react-redux-toastr\";\r\nimport { getDailyTotalCountAsync } from \"../../../app/api\";\r\nimport { GET_GLOBAL_DAILY } from \"./graph.constants\";\r\n\r\nexport const getGlobalTotalAction = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const data = await getDailyTotalCountAsync();\r\n      dispatch({\r\n        type: GET_GLOBAL_DAILY,\r\n        payload: data,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      toastr.error(\"oops\", \"something went wrong\");\r\n    }\r\n  };\r\n};\r\n","export const GET_GLOBAL_DAILY = \"GET_GLOBAL_DAILY\";\r\n","import { useSelector } from \"react-redux\";\r\n\r\nconst useCurrentCountry = () => {\r\n  const currentCountry = useSelector((state) => state.country.selectedCountry);\r\n  const confirmed = useSelector((state) => state.stats.confirmed);\r\n  const recovered = useSelector((state) => state.stats.recovered);\r\n  const deaths = useSelector((state) => state.stats.deaths);\r\n  return { currentCountry, confirmed, recovered, deaths };\r\n};\r\n\r\nexport default useCurrentCountry;\r\n","import React from \"react\";\r\nimport GraphLayout from \"../components/Graphs/GraphLayout\";\r\nimport useGlobalTotal from \"../hooks/useGlobalTotal\";\r\nimport useCurrentCountry from \"../hooks/useCurrentCountry\";\r\n\r\nconst GraphView = () => {\r\n  const { globalData } = useGlobalTotal();\r\n  const { currentCountry, confirmed, deaths, recovered } = useCurrentCountry();\r\n  const selectedCountry = {\r\n    currentCountry,\r\n    confirmed,\r\n    deaths,\r\n    recovered,\r\n  };\r\n\r\n  return <GraphLayout items={globalData} selectedCountry={selectedCountry} />;\r\n};\r\n\r\nexport default GraphView;\r\n","import React from \"react\";\r\n\r\nconst PreventiveView = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        {/* Card header */}\r\n        <div className=\"card-header\">\r\n          {/* Title */}\r\n          <h5 className=\"h3 mb-0\">\r\n            Basic protective measures against the new coronavirus\r\n          </h5>\r\n        </div>\r\n        {/* Card body */}\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <div\r\n                className=\"timeline timeline-one-side\"\r\n                data-timeline-content=\"axis\"\r\n                data-timeline-axis-style=\"dashed\"\r\n              >\r\n                <div className=\"timeline-block\">\r\n                  <span className=\"timeline-step badge-success\">\r\n                    <i className=\"ni ni-bell-55\" />\r\n                  </span>\r\n                  <div className=\"timeline-content\">\r\n                    <div className=\"d-flex justify-content-between pt-1\">\r\n                      <div>\r\n                        <span className=\"text-muted text-sm font-weight-bold\">\r\n                          Know how it spreads\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <ul>\r\n                      <li>\r\n                        There is currently no vaccine to prevent coronavirus\r\n                        disease 2019 (COVID-19).\r\n                      </li>\r\n                      <li>\r\n                        The best way to prevent illness is to avoid being\r\n                        exposed to this virus.\r\n                      </li>\r\n                      <li>\r\n                        The virus is thought to spread mainly from\r\n                        person-to-person\r\n                        <ul>\r\n                          <li>\r\n                            Between people who are in close contact with one\r\n                            another (within about 6 feet).\r\n                          </li>\r\n                          <li>\r\n                            Through respiratory droplets produced when an\r\n                            infected person coughs, sneezes or talks.\r\n                          </li>\r\n                          <li>\r\n                            These droplets can land in the mouths or noses of\r\n                            people who are nearby or possibly be inhaled into\r\n                            the lungs.\r\n                          </li>\r\n                          <li>\r\n                            Some recent studies have suggested that COVID-19 may\r\n                            be spread by people who are not showing symptoms.\r\n                          </li>\r\n                        </ul>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                <div className=\"timeline-block\">\r\n                  <span className=\"timeline-step badge-danger\">\r\n                    <i className=\"ni ni-atom\" />\r\n                  </span>\r\n                  <div className=\"timeline-content\">\r\n                    <div className=\"d-flex justify-content-between pt-1\">\r\n                      <div>\r\n                        <span className=\"text-muted text-sm font-weight-bold\">\r\n                          Cover your mouth and nose with a cloth face cover when\r\n                          around others\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <ul>\r\n                      <li>\r\n                        You could spread COVID-19 to others even if you do not\r\n                        feel sick.\r\n                      </li>\r\n                      <li>\r\n                        Everyone should wear a cloth face cover when they have\r\n                        to go out in public, for example to the grocery store or\r\n                        to pick up other necessities.\r\n                        <ul>\r\n                          <li>\r\n                            Cloth face coverings should not be placed on young\r\n                            children under age 2, anyone who has trouble\r\n                            breathing, or is unconscious, incapacitated or\r\n                            otherwise unable to remove the mask without\r\n                            assistance.\r\n                          </li>\r\n                        </ul>\r\n                      </li>\r\n                      <li>\r\n                        The cloth face cover is meant to protect other people in\r\n                        case you are infected.\r\n                      </li>\r\n                      <li>\r\n                        Do NOT use a facemask meant for a healthcare worker.\r\n                      </li>\r\n                      <li>\r\n                        Continue to keep about 6 feet between yourself and\r\n                        others. The cloth face cover is not a substitute for\r\n                        social distancing.\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div\r\n                className=\"timeline timeline-one-side\"\r\n                data-timeline-content=\"axis\"\r\n                data-timeline-axis-style=\"dashed\"\r\n              >\r\n                <div className=\"timeline-block\">\r\n                  <span className=\"timeline-step badge-success\">\r\n                    <i className=\"ni ni-bell-55\" />\r\n                  </span>\r\n                  <div className=\"timeline-content\">\r\n                    <div className=\"d-flex justify-content-between pt-1\">\r\n                      <div>\r\n                        <span className=\"text-muted text-sm font-weight-bold\">\r\n                          Wash your hands often\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <ul>\r\n                      <li>\r\n                        Wash your hands often with soap and water for at least\r\n                        20 seconds especially after you have been in a public\r\n                        place, or after blowing your nose, coughing, or\r\n                        sneezing.\r\n                      </li>\r\n                      <li>\r\n                        If soap and water are not readily available, use a hand\r\n                        sanitizer that contains at least 60% alcohol. Cover all\r\n                        surfaces of your hands and rub them together until they\r\n                        feel dry.\r\n                      </li>\r\n                      <li>\r\n                        Avoid touching your eyes, nose, and mouth with unwashed\r\n                        hands.\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                <div className=\"timeline-block\">\r\n                  <span className=\"timeline-step badge-danger\">\r\n                    <i className=\"ni ni-atom\" />\r\n                  </span>\r\n                  <div className=\"timeline-content\">\r\n                    <div className=\"d-flex justify-content-between pt-1\">\r\n                      <div>\r\n                        <span className=\"text-muted text-sm font-weight-bold\">\r\n                          Avoid close contact\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <ul>\r\n                      <li>Avoid close contact with people who are sick</li>\r\n                      <li>Stay home as much as possible.</li>\r\n                      <li>\r\n                        Put distance between yourself and other people.\r\n                        <ul>\r\n                          <li>\r\n                            Remember that some people without symptoms may be\r\n                            able to spread virus.\r\n                          </li>\r\n                          <li>\r\n                            Keeping distance from others is especially important\r\n                            for people who are at higher risk of getting very\r\n                            sick.\r\n                          </li>\r\n                        </ul>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div\r\n                className=\"timeline timeline-one-side\"\r\n                data-timeline-content=\"axis\"\r\n                data-timeline-axis-style=\"dashed\"\r\n              >\r\n                <div className=\"timeline-block\">\r\n                  <span className=\"timeline-step badge-success\">\r\n                    <i className=\"ni ni-bell-55\" />\r\n                  </span>\r\n                  <div className=\"timeline-content\">\r\n                    <div className=\"d-flex justify-content-between pt-1\">\r\n                      <div>\r\n                        <span className=\"text-muted text-sm font-weight-bold\">\r\n                          Clean and disinfect\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <ul>\r\n                      <li>\r\n                        Clean AND disinfect frequently touched surfaces daily.\r\n                        This includes tables, doorknobs, light switches,\r\n                        countertops, handles, desks, phones, keyboards, toilets,\r\n                        faucets, and sinks.\r\n                      </li>\r\n                      <li>\r\n                        If surfaces are dirty, clean them. Use detergent or soap\r\n                        and water prior to disinfection.\r\n                      </li>\r\n                      <li>\r\n                        Then, use a household disinfectant. Most common\r\n                        EPA-registered household disinfectantsexternal will\r\n                        work.\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                <div className=\"timeline-block\">\r\n                  <span className=\"timeline-step badge-danger\">\r\n                    <i className=\"ni ni-atom\" />\r\n                  </span>\r\n                  <div className=\"timeline-content\">\r\n                    <div className=\"d-flex justify-content-between pt-1\">\r\n                      <div>\r\n                        <span className=\"text-muted text-sm font-weight-bold\">\r\n                          Cover coughs and sneezes\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <ul>\r\n                      <li>\r\n                        If you are in a private setting and do not have on your\r\n                        cloth face covering, remember to always cover your mouth\r\n                        and nose with a tissue when you cough or sneeze or use\r\n                        the inside of your elbow.\r\n                      </li>\r\n                      <li>Throw used tissues in the trash.</li>\r\n                      <li>\r\n                        Immediately wash your hands with soap and water for at\r\n                        least 20 seconds. If soap and water are not readily\r\n                        available, clean your hands with a hand sanitizer that\r\n                        contains at least 60% alcohol.\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreventiveView;\r\n","import React from \"react\";\r\nimport BaseFooter from \"./Footer/BaseFooter\";\r\nimport StatsView from \"../view/StatsView\";\r\nimport ListCountryView from \"../view/ListCountryView\";\r\nimport GraphView from \"../view/GraphView\";\r\nimport useCurrentCountry from \"../hooks/useCurrentCountry\";\r\nimport PreventiveView from \"./preventive/PreventiveView\";\r\n\r\nconst Main = () => {\r\n  const { currentCountry } = useCurrentCountry();\r\n  return (\r\n    <div className=\"main-content\" id=\"panel\">\r\n      {/* Topnav */}\r\n\r\n      <nav className=\"navbar navbar-top navbar-expand navbar-dark bg-primary border-bottom\">\r\n        <div className=\"container-fluid\"></div>\r\n      </nav>\r\n      {/* Header */}\r\n      <div className=\"header bg-primary pb-6\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"header-body\">\r\n            <div className=\"row align-items-center py-4\">\r\n              <div className=\"col-lg-6 col-7\">\r\n                <h6 className=\"h2 text-white d-inline-block mb-0\">\r\n                  <i className=\"fa fa-flag\"></i> Country: {currentCountry === null ? \"Global\" : currentCountry}\r\n                </h6>\r\n              </div>\r\n            </div>\r\n            {/* Card stats */}\r\n            <StatsView />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Page content */}\r\n      <div className=\"container-fluid mt--6\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-8\">\r\n            <GraphView />\r\n          </div>\r\n          <div className=\"col-xl-4\">\r\n            <ListCountryView />\r\n          </div>\r\n        </div>\r\n\r\n        <PreventiveView />\r\n        {/* Footer */}\r\n        <BaseFooter />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","// Copyright 2019 Bik_krl\r\n// \r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n// \r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n// \r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\n\r\nconst createReducer = (initialState, fnMap) => {\r\n  return (state = initialState, { type, payload }) => {\r\n    const handler = fnMap[type];\r\n    return handler ? handler(state, payload) : state;\r\n  };\r\n};\r\n\r\nexport default createReducer;\r\n","import createReducer from \"../../../app/reducer/reducerUtil\";\r\nimport { GET_TOTAL_COUNTRY_COUNT } from \"./stats.constants\";\r\n\r\nconst initialState = {\r\n  confirmed: null,\r\n  recovered: null,\r\n  deaths: null,\r\n  lastUpdate: null,\r\n};\r\n\r\nconst getTotalCountry = (state, payload) => {\r\n  return { ...state, ...payload };\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [GET_TOTAL_COUNTRY_COUNT]: getTotalCountry,\r\n});\r\n","import { GET_COUNTRIES, SELECTED_COUNTRY } from \"./countries.constants\";\r\nimport createReducer from \"../../../app/reducer/reducerUtil\";\r\n\r\nconst initialState = {\r\n  countries: [{ name: \"Global\", iso2: \"Gl\", iso3: \"none\" }],\r\n  selectedCountry: null,\r\n};\r\n\r\nconst getCountries = (state, payload) => {\r\n  return {\r\n    ...state,\r\n    countries: [...state.countries.concat(payload)],\r\n  };\r\n};\r\n\r\nconst getSelectedCountry = (state, payload) => {\r\n  return { ...state, selectedCountry: payload || null };\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [GET_COUNTRIES]: getCountries,\r\n  [SELECTED_COUNTRY]: getSelectedCountry,\r\n});\r\n","import createReducer from \"../../../app/reducer/reducerUtil\";\r\nimport { GET_GLOBAL_DAILY } from \"./graph.constants\";\r\n\r\nconst initialState = {\r\n  global: [],\r\n};\r\n\r\nconst getGlobalDaily = (state, payload) => {\r\n  return { ...state, global: payload };\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [GET_GLOBAL_DAILY]: getGlobalDaily,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as toastrReducer } from \"react-redux-toastr\";\r\nimport statsReducer from \"../../components/Stats/reducer/stats.reducer\";\r\nimport countriesReducer from \"../../components/ListCountry/reducer/countries.reducer\";\r\nimport graphReducer from \"../../components/Graphs/reducer/graph.reducer\";\r\n\r\nexport default combineReducers({\r\n  toastr: toastrReducer,\r\n  stats: statsReducer,\r\n  country: countriesReducer,\r\n  graph: graphReducer,\r\n});\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport ReduxToastr from \"react-redux-toastr\";\r\nimport Main from \"../../components/Main\";\r\nimport { configureStore } from \"../store/configStore\";\r\nimport 'react-redux-toastr/lib/css/react-redux-toastr.min.css'\r\nexport const App = () => {\r\n  const store = configureStore();\r\n  return (\r\n    <Provider store={store}>\r\n      <ReduxToastr\r\n        timeOut={4000}\r\n        newestOnTop={false}\r\n        preventDuplicates\r\n        position=\"top-right\"\r\n        transitionIn=\"fadeIn\"\r\n        transitionOut=\"fadeOut\"\r\n      />\r\n      <Main />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducer/rootReducer\";\r\n\r\nexport const configureStore = preloadedState => {\r\n  const middlewares = [thunk];\r\n  const middlewareEnhancer = applyMiddleware(...middlewares);\r\n  const storeEnhancer = [middlewareEnhancer];\r\n  const composedEnhancer = composeWithDevTools(...storeEnhancer);\r\n  const store = createStore(rootReducer, preloadedState, composedEnhancer);\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    if (module.hot) {\r\n      module.hot.accept(\"../reducer/rootReducer\", () => {\r\n        const newReducer = require(\"../reducer/rootReducer\").default;\r\n        store.replaceReducer(newReducer);\r\n      });\r\n    }\r\n  }\r\n  return store;\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = process.env.REACT_APP_BASE_URL;\r\n\r\nexport const axiosConfig = () => {\r\n  axios.defaults.baseURL = baseURL;\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport App from \"./app/layout/App\";\r\nimport { axiosConfig } from \"./config\";\r\n\r\naxiosConfig();\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}